@model CMS.ViewModels.PCMemberViewModels.RegisterPCMemberViewModel

@{
    Layout = "";
}

<head>
    @Scripts.Render("~/bundles/jquery")
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/bundles/modernizr")
    @Scripts.Render("~/bundles/bootstrap")

    @Styles.Render("~/Content/css")
</head>
<body>

    <br />
    <div class="container body-content">
        <div class="row">
            <div class="col-md-12">
                <h1 class="text-center mb-4">Register</h1>
                <div class="col-md-6 mx-auto">
                    <br />
                    @if (Model.Message != null)
                    {
                        if (Convert.ToBoolean(Model.Status))
                        {
                            <div class="alert alert-success">
                                <strong>Success!</strong>@Model.Message
                            </div>
                        }
                        else
                        {
                            <div class="alert alert-danger">
                                <strong>Error!</strong>@Model.Message
                            </div>
                        }
                    }
                </div>
                <div class="row">
                    <div class="col-md-6 mx-auto">
                        <div class="card rounded shadow-lg p-3 mb-5 bg-white rounded">
                            <div class="card-body">
                                @using (Html.BeginForm())
                                {
                                    @Html.AntiForgeryToken()

                                    <h4>Program Committee Member</h4>
                                    <hr />
                                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                                    <div class="form-group">
                                        @Html.LabelFor(model => model.PCMember.Email, htmlAttributes: new { @class = "control-label" })
                                        @Html.EditorFor(model => model.PCMember.Email, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.PCMember.Email, "", new { @class = "text-danger" })

                                    </div>

                                    <div class="form-group">
                                        @Html.LabelFor(model => model.PCMember.Username, htmlAttributes: new { @class = "control-label" })
                                        @Html.EditorFor(model => model.PCMember.Username, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.PCMember.Username, "", new { @class = "text-danger" })

                                    </div>

                                    <div class="form-group">
                                        @Html.LabelFor(model => model.PCMember.Password, htmlAttributes: new { @class = "control-label" })
                                        @Html.EditorFor(model => model.PCMember.Password, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.PCMember.Password, "", new { @class = "text-danger" })

                                    </div>

                                    <div class="form-group">
                                        @Html.LabelFor(model => model.PCMember.Name, htmlAttributes: new { @class = "control-label" })
                                        @Html.EditorFor(model => model.PCMember.Name, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.PCMember.Name, "", new { @class = "text-danger" })

                                    </div>

                                    <div class="form-group">
                                        @Html.LabelFor(model => model.PCMember.Affiliation, htmlAttributes: new { @class = "control-label" })
                                        @Html.EditorFor(model => model.PCMember.Affiliation, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.PCMember.Affiliation, "", new { @class = "text-danger" })

                                    </div>

                                    <div class="form-group">
                                        @Html.LabelFor(model => model.PCMember.WebPage, htmlAttributes: new { @class = "control-label " })
                                        @Html.EditorFor(model => model.PCMember.WebPage, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.PCMember.WebPage, "", new { @class = "text-danger" })

                                    </div>

                                    <div class="form-group">
                                        <input type="submit" value="Create" class="btn btn-primary" style="width: 100%;" />
                                    </div>

                                    <div class="d-flex flex-row mx-auto">
                                        <div class="mr-2">
                                            <h4>Have an accout already?</h4>
                                        </div>
                                        <input type="button" value="Login" class="btn btn-primary" onclick="@("window.location.href='" + Url.Action("login","pcmembers") + "'");"/>
                                    </div>
                                }
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>

    </div>
</body>
